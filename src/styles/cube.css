/* Main App Styles */
.app {
  min-height: 100vh;
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  padding: 2rem;
  font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
}

.app-header {
  text-align: center;
  margin-bottom: 3rem;
}

.app-title {
  font-size: 3rem;
  font-weight: 800;
  color: white;
  margin: 0;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.3);
  letter-spacing: -0.02em;
}

.app-subtitle {
  font-size: 1.2rem;
  color: rgba(255, 255, 255, 0.9);
  margin: 0.5rem 0 0 0;
  font-weight: 400;
}

.app-content {
  display: flex;
  gap: 4rem;
  max-width: 1400px;
  margin: 0 auto;
  align-items: flex-start;
}

/* Cube Container Styles */
.cube-section {
  flex: 1;
  display: flex;
  justify-content: center;
  align-items: center;
  min-height: 600px;
}

.cube-container {
  perspective: 1200px;
  perspective-origin: center center;
  display: flex;
  justify-content: center;
  align-items: center;
}

.cube-3d {
  position: relative;
  width: 300px;
  height: 300px;
  transform-style: preserve-3d;
  transition: transform 0.3s cubic-bezier(0.4, 0.0, 0.2, 1);
}

.cube-3d.animating {
  transition: transform 0.6s cubic-bezier(0.34, 1.56, 0.64, 1);
}

/* Cube Face Styles */
.cube-face {
  position: absolute;
  width: 300px;
  height: 300px;
  opacity: 0.98;
  border-radius: 8px;
  overflow: hidden;
}

.cube-face-front {
  transform: rotateY(0deg) translateZ(150px);
}

.cube-face-back {
  transform: rotateY(180deg) translateZ(150px);
}

.cube-face-right {
  transform: rotateY(90deg) translateZ(150px);
}

.cube-face-left {
  transform: rotateY(-90deg) translateZ(150px);
}

.cube-face-up {
  transform: rotateX(90deg) translateZ(150px);
}

.cube-face-down {
  transform: rotateX(-90deg) translateZ(150px);
}

.face-grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(3, 1fr);
  gap: 6px;
  padding: 15px;
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  background: rgba(0, 0, 0, 0.9);
  border-radius: 8px;
  box-shadow: 
    inset 0 0 20px rgba(0, 0, 0, 0.5),
    0 0 30px rgba(0, 0, 0, 0.3);
}

.face-cell {
  border-radius: 8px;
  border: 3px solid #000;
  box-shadow: 
    inset 3px 3px 6px rgba(255, 255, 255, 0.4),
    inset -3px -3px 6px rgba(0, 0, 0, 0.4),
    0 3px 10px rgba(0, 0, 0, 0.3);
  transition: all 0.2s ease;
  position: relative;
  overflow: hidden;
}

.face-cell::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(135deg, rgba(255, 255, 255, 0.3) 0%, transparent 50%, rgba(0, 0, 0, 0.2) 100%);
  pointer-events: none;
}

.face-cell:hover {
  transform: scale(1.05);
  box-shadow: 
    inset 3px 3px 8px rgba(255, 255, 255, 0.5),
    inset -3px -3px 8px rgba(0, 0, 0, 0.5),
    0 5px 15px rgba(0, 0, 0, 0.4);
}

/* Controls Panel Styles */
.controls-section {
  flex: 0 0 400px;
}

.controls-panel {
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border-radius: 16px;
  padding: 2rem;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  border: 1px solid rgba(255, 255, 255, 0.2);
}

.controls-section:not(.controls-panel) {
  display: flex;
  flex-direction: column;
}

.controls-title {
  font-size: 1.4rem;
  font-weight: 700;
  color: #2d3748;
  margin: 0 0 1.5rem 0;
  padding-bottom: 0.5rem;
  border-bottom: 2px solid #e2e8f0;
}

.controls-section + .controls-section {
  margin-top: 2rem;
}

/* Face Controls */
.face-controls {
  display: grid;
  gap: 1rem;
}

.face-control-group {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.face-label {
  font-weight: 600;
  color: #4a5568;
  min-width: 60px;
  font-size: 0.9rem;
}

.face-buttons {
  display: flex;
  gap: 0.5rem;
}

.face-btn {
  min-width: 60px;
  font-size: 0.85rem;
  padding: 0.5rem 0.75rem;
  display: flex;
  align-items: center;
  gap: 0.25rem;
}

/* Axis Controls */
.axis-controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.axis-group {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.axis-label {
  font-weight: 600;
  color: #4a5568;
  min-width: 60px;
  font-size: 0.9rem;
}

.axis-btn {
  min-width: 50px;
  font-size: 0.85rem;
  padding: 0.5rem 0.75rem;
}

/* Action Controls */
.action-controls {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.action-btn {
  padding: 0.875rem 1.5rem;
  font-size: 1rem;
  font-weight: 600;
  display: flex;
  align-items: center;
  justify-content: center;
  gap: 0.5rem;
  border-radius: 12px;
  transition: all 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
}

/* Button Base Styles */
.control-btn {
  border: none;
  border-radius: 8px;
  font-weight: 600;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0.0, 0.2, 1);
  background: linear-gradient(145deg, #f7fafc, #edf2f7);
  color: #2d3748;
  box-shadow: 
    0 2px 4px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.6);
}

.control-btn:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: 
    0 4px 12px rgba(0, 0, 0, 0.15),
    inset 0 1px 0 rgba(255, 255, 255, 0.8);
}

.control-btn:active:not(:disabled) {
  transform: translateY(0);
  box-shadow: 
    0 2px 4px rgba(0, 0, 0, 0.1),
    inset 0 2px 4px rgba(0, 0, 0, 0.1);
}

.control-btn:disabled {
  opacity: 0.5;
  cursor: not-allowed;
  transform: none !important;
}

/* Specific Button Styles */
.scramble-btn {
  background: linear-gradient(145deg, #fed7d7, #feb2b2);
  color: #c53030;
}

.scramble-btn:hover:not(:disabled) {
  background: linear-gradient(145deg, #feb2b2, #fc8181);
  color: #9b2c2c;
}

.solve-btn {
  background: linear-gradient(145deg, #c6f6d5, #9ae6b4);
  color: #2f855a;
}

.solve-btn:hover:not(:disabled) {
  background: linear-gradient(145deg, #9ae6b4, #68d391);
  color: #276749;
}

.reset-btn {
  background: linear-gradient(145deg, #bee3f8, #90cdf4);
  color: #2c5282;
}

.reset-btn:hover:not(:disabled) {
  background: linear-gradient(145deg, #90cdf4, #63b3ed);
  color: #2a4365;
}

/* Solved Indicator */
.solved-indicator {
  margin-top: 2rem;
  padding: 1rem;
  background: linear-gradient(145deg, #c6f6d5, #9ae6b4);
  border-radius: 12px;
  text-align: center;
  animation: celebration 2s ease-in-out infinite alternate;
}

.solved-message {
  font-size: 1.2rem;
  font-weight: 700;
  color: #22543d;
}

@keyframes celebration {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(72, 187, 120, 0.4);
  }
  100% {
    transform: scale(1.02);
    box-shadow: 0 0 0 10px rgba(72, 187, 120, 0);
  }
}

/* Responsive Design */
@media (max-width: 1200px) {
  .app-content {
    flex-direction: column;
    gap: 2rem;
    align-items: center;
  }
  
  .controls-section {
    flex: none;
    width: 100%;
    max-width: 500px;
  }
  
  .cube-3d {
    width: 250px;
    height: 250px;
  }
  
  .cube-face {
    width: 250px;
    height: 250px;
  }
  
  .cube-face-front,
  .cube-face-back,
  .cube-face-right,
  .cube-face-left,
  .cube-face-up,
  .cube-face-down {
    transform: none;
  }
  
  .cube-face-front { transform: rotateY(0deg) translateZ(125px); }
  .cube-face-back { transform: rotateY(180deg) translateZ(125px); }
  .cube-face-right { transform: rotateY(90deg) translateZ(125px); }
  .cube-face-left { transform: rotateY(-90deg) translateZ(125px); }
  .cube-face-up { transform: rotateX(90deg) translateZ(125px); }
  .cube-face-down { transform: rotateX(-90deg) translateZ(125px); }
}

@media (max-width: 768px) {
  .app {
    padding: 1rem;
  }
  
  .app-title {
    font-size: 2rem;
  }
  
  .app-subtitle {
    font-size: 1rem;
  }
  
  .controls-panel {
    padding: 1.5rem;
  }
  
  .face-control-group {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
  
  .axis-group {
    flex-direction: column;
    align-items: flex-start;
    gap: 0.5rem;
  }
  
  .cube-3d {
    width: 200px;
    height: 200px;
  }
  
  .cube-face {
    width: 200px;
    height: 200px;
  }
  
  .cube-face-front { transform: rotateY(0deg) translateZ(100px); }
  .cube-face-back { transform: rotateY(180deg) translateZ(100px); }
  .cube-face-right { transform: rotateY(90deg) translateZ(100px); }
  .cube-face-left { transform: rotateY(-90deg) translateZ(100px); }
  .cube-face-up { transform: rotateX(90deg) translateZ(100px); }
  .cube-face-down { transform: rotateX(-90deg) translateZ(100px); }
}